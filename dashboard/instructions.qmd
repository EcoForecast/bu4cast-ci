---
title: "How to forecast"
editor: 
  markdown: 
    wrap: sentence
---

## How to submit a forecast

We provide an overview of the steps for submitting with the details below:

1)  Register at <https://forms.gle/kg2Vkpho9BoMXSy57>. You are not required to register if your forecast submission uses the word "example" in your model_id". Any forecasts with "example" in the model_id will not be used in analyses.
2)  Generate forecast with required columns
3)  Write the forecast to a file that follows the standardized naming format.
4)  Submit forecast using a provided function

### Forecast file format

The file is a csv format with the following columns:

-   `project_id`: use `vera4cast`

-   `model_id`: the short name of the model defined as the model_id in the file name (see below) and in your metadata.
    The model_id should have no spaces.

-   `datetime`: forecast timestamp.
    Format `%Y-%m-%d %H:%M:%S` with UTC as the time zone.

-   `reference_datetime`: The start of the forecast; this should be 0 times steps in the future.
    There should only be one value of `reference_datetime` in the file.
    Format is `%Y-%m-%d %H:%M:%S` with UTC as the time zone

-   `duration`: the time-step of the forecast.
    Use the value of `P1D` for a daily forecast and `PT1H` for an hourly forecast.
    This value should match the duration of the target variable that you are forecasting.

-   `site_id`: code for site (`bvre` or `fcre`) - `depth_m`: the depth (meters) for the forecasted variable.
    Use `NA` for variables without a specified depth.

-   `family` name of the probability distribution that is described by the parameter values in the parameter column (see list below for accepted distribution).
    An ensemble forecast as a family of `ensemble`.
    See note below about family

-   `parameter` the parameters for the distribution (see note below about parameter column) or the number of the ensemble member.
    For example the parameters for normal are `mu` and `sigma`.

-   `variable`: standardized variable name

-   `prediction`: forecasted value for the parameter in the parameter column

#### Family - Parameter Columns

For example, For a parametric forecast with the normal distribution, the `family` column uses the word `normal` to designate a normal distribution and the parameter column must have values of `mu` and `sigma` for each forecasted variable, site_id, depth and time combination.

Parameteric forecasts for binary variables should use `bernoulli` as the distribution.

If you are submitting a forecast that is not in the supported list we recommend using the ensemble format and sampling from your distribution to generate a set of ensemble members that represents your distribution.

##### Supported distributions

The following names and parameterization of the distribution are supported (family: parameters):

-   `lognormal`: `mu`, `sigma`
-   `normal`: `mu`,`sigma`
-   `bernoulli`: `prob`
-   `beta`: `shape1`, `shape2`
-   `uniform`: `min`, `max`
-   `gamma`: `shape`, `rate`
-   `logistic`: `location`, `scale`
-   `exponential`: `rate`
-   `poisson`: `lambda`

#### Example forecasts

Here is an example of a forecast that uses a normal distribution:

```{r}
readr::read_csv("https://renc.osn.xsede.org/bio230121-bucket01/vera4cast/forecasts/raw/20230929203557_daily-2023-09-29-persistenceRW.csv.gz", show_col_types = FALSE)
```

For an ensemble (or sample) forecast, the `family` column uses the word `ensemble` to design that it is a ensemble forecast and the parameter column is the ensemble member number (`1`, `2`, `3` ...)

```{r}
readr::read_csv("https://renc.osn.xsede.org/bio230121-bucket01/vera4cast/forecasts/raw/20230929203552_daily-2023-09-29-climatology.csv.gz")
```

### Submission process

Individual forecast files can be uploaded any time.

Teams will submit their forecast csv files through an R function.

The function is available using the following code

```{r eval = FALSE}
remotes::install_github("LTREB-reservoirs/vera4castHelpers")
```

The submit function is

```{r eval = FALSE}
library(vera4castHelpers)
submit(forecast_file = "your_file.csv")
```

If you will be submitting multiple forecasts using the same model_id, use the following

```{r eval = FALSE}
vera4castHelpers::submit(forecast_file = "your_file.csv",
                         first_submission = FALSE)
```

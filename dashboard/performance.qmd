---
title: "Forecast performance"
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r setup}
library(ggiraph)
library(dplyr)
library(ggplot2)
library(glue)
source("R/plot-utils.R")
#source("../R/ignore_sigpipes.R")
#ignore_sigpipe()

terrestrial_focal_sites <- c("HARV", "OSBS")
aquatics_focal_sites <- c("BARC", "CRAM")
phenology_focal_sites <- c("HARV", "OSBS")
ticks_focal_sites <- c("HARV", "OSBS")
beetles_focal_sites <- c("HARV", "OSBS")
```

This page visualizes the forecasts and forecast performance for the focal target variables.

## Most recent forecasts {#sec-performance}

```{r}
reference_datetimes <- arrow::open_dataset("../cache/summaries") |> 
  group_by(variable) |> 
  dplyr::summarize(reference_datetime_max = max(reference_datetime)) |>  
  dplyr::collect()

config <- yaml::read_yaml("../challenge_configuration.yaml")
sites <- readr::read_csv(paste0("../", config$site_table), show_col_types = FALSE) |> 
  rename(site_id = field_site_id)

df_P1D <- arrow::open_dataset("../cache/summaries/duration=P1D") |> 
  left_join(reference_datetimes, by = "variable") |> 
  filter(reference_datetime == reference_datetime_max) |> 
  left_join(sites, by = "site_id") |> 
  filter(site_id %in% sites$site_id) |> 
  mutate(reference_datetime = lubridate::as_datetime(reference_datetime),
         datetime = lubridate::as_datetime(datetime)) |> 
  filter(lubridate::as_date(datetime) > lubridate::as_date(reference_datetime)) |> 
  collect()

df_P1W <- arrow::open_dataset("../cache/summaries/duration=P1D") |> 
  left_join(reference_datetimes, by = "variable") |> 
  filter(reference_datetime == reference_datetime_max) |> 
  left_join(sites, by = "site_id") |> 
  filter(site_id %in% sites$site_id,) |> 
  mutate(reference_datetime = lubridate::as_datetime(reference_datetime),
         datetime = lubridate::as_datetime(datetime)) |> 
  filter(lubridate::as_date(datetime) > lubridate::as_date(reference_datetime)) |> 
  collect()

```

Forecasts submitted on `r max(lubridate::as_date(df_P1D$reference_datetime))`

::: panel-tabset

### Terrestrial: Net Ecosystem Exchange

```{r}
df_P1D |> 
  filter(variable == "nee",
         site_id %in% terrestrial_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Terrestrial: Latent Heat Flux

```{r}
df_P1D |> 
  filter(variable == "le",
         site_id %in% terrestrial_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```
### Phenology: Greeness

```{r}
df_P1D |> 
  filter(variable == "gcc_90",
         site_id %in% phenology_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```


### Phenology: Redness

```{r}
df_P1D |> 
  filter(variable == "rcc_90",
         site_id %in% phenology_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Aquatics: water temperature

```{r}
df_P1D |> 
  filter(variable == c("temperature"),
         site_id %in% aquatics_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Aquatics: dissolved oxygen

```{r}
df_P1D |> 
  filter(variable == c("oxygen"),
         site_id %in% aquatics_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Aquatics: chrophyll-a

```{r}
df_P1D |> 
  filter(variable == c("chla"),
         site_id %in% aquatics_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()

```

### Beetle community richness

```{r}
df_P1W |> 
  filter(variable == c("richness"),
         site_id %in% beetles_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

### Beetle community abundance

```{r}
df_P1W |> 
  filter(variable == c("abundance"),
         site_id %in% beetles_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```


### Ticks: Amblyomma americanum

```{r}
df_P1W |> 
  filter(variable == c("amblyomma_americanum"),
         site_id %in% ticks_focal_sites) |> 
  mutate(observation = as.numeric(NA)) |> 
  forecast_plots()
```

:::

## Forecast analysis

```{r}
cutoff <- Sys.Date() - lubridate::days(30)
df_P1D <- arrow::open_dataset("../cache/scores/duration=P1D") |> 
  left_join(sites, by = "site_id") |> 
  mutate(reference_datetime = lubridate::as_datetime(reference_datetime),
         datetime = lubridate::as_datetime(datetime)) |>
  filter(reference_datetime > cutoff) |> 
  collect() 


cutoff <- Sys.Date() - lubridate::days(365)


df_P1W <- arrow::open_dataset("../cache/scores/duration=P1W") |> 
  left_join(sites, by = "site_id") |> 
  mutate(reference_datetime = lubridate::as_datetime(reference_datetime),
         datetime = lubridate::as_datetime(datetime)) |> 
  filter(reference_datetime > cutoff) |> 
  collect() 

ref <- Sys.Date() - lubridate::days(30)

ref_P1D <- min(c(Sys.Date() - lubridate::days(30), 
             lubridate::as_date(df_P1D$reference_datetime)))

ref_P1W <- max(c(Sys.Date() - lubridate::days(365), 
             lubridate::as_date(df_P1W$reference_datetime)))

#n_data <- 10
#who <- combined |> filter(!is.na(observation)) |> summarise(has_data = max(reference_datetime)) |> collect()
#ref <- as.character ( as.Date(who$has_data[[1]]) - n_data )
ex_P1D <- df_P1D|> 
  mutate(min_reference_datetime = min(reference_datetime)) |> 
  filter(reference_datetime == min_reference_datetime)

ex_P1W <- df_P1W |> 
  mutate(min_reference_datetime = min(reference_datetime)) |> 
  filter(reference_datetime == min_reference_datetime)

```

Below are forecasts submitted 30 days ago and include the observations used to evaluate them. Mouse over to see the team id, scroll to zoom.

::: panel-tabset
### Terrestrial: Net Ecosystem Exchange

```{r}
ex_P1D |> 
  filter(variable == "nee",
         site_id %in% terrestrial_focal_sites) |> 
  forecast_plots()
```

### Terrestrial: Latent Heat Flux

```{r}
ex_P1D |> 
  filter(variable == "le",
         site_id %in% terrestrial_focal_sites) |> 
  forecast_plots()
```
### Phenology: Greeness

```{r}
ex_P1D |> 
  filter(variable == "gcc_90",
         site_id %in% phenology_focal_sites) |> 
  forecast_plots()
```


### Phenology: Redness

```{r}
ex_P1D |> 
  filter(variable == "rcc_90",
         site_id %in% phenology_focal_sites) |> 
  forecast_plots()
```

### Aquatics: water temperature

```{r}
ex_P1D |> 
  filter(variable == c("temperature"),
         site_id %in% aquatics_focal_sites) |> 
  forecast_plots()
```

### Aquatics: disolved oxygen

```{r}
ex_P1D |> 
  filter(variable == c("oxygen"),
         site_id %in% aquatics_focal_sites) |> 
  forecast_plots()
```

### Aquatics: chrophyll-a

```{r}
ex_P1D |> 
  filter(variable == c("chla"),
         site_id %in% aquatics_focal_sites) |> 
  forecast_plots()

```

### Beetle community richness

```{r}
ex_P1W |> 
  filter(variable == c("richness"),
         site_id %in% beetles_focal_sites) |> 
  forecast_plots()
```

### Beetle community abundance

```{r}
ex_P1W |> 
  filter(variable == c("abundance"),
         site_id %in% beetles_focal_sites) |> 
  forecast_plots()
```


### Ticks: Amblyomma americanum

```{r}
ex_P1W |> 
  filter(variable == c("amblyomma_americanum"),
         site_id %in% ticks_focal_sites) |> 
  forecast_plots()
```


:::

## Aggregated scores

Average skill scores of each model across all sites.\

Scores are shown by reference date and forecast horizon (in days).\

Scores are averaged across all submissions of the model with a given horizon or a given `reference_datetime` using submissions made since `r cutoff`.\

::: panel-tabset

### Terrestrial: Net Ecosystem Exchange

```{r}
leaderboard_plots(df_P1D, "nee")
```

### Terrestrial: Latent Heat Flux

```{r}
leaderboard_plots(df_P1D, "le")
```
### Phenology: Greeness

```{r}
leaderboard_plots(df_P1D, "gcc_90")
```


### Phenology: Redness

```{r}
leaderboard_plots(df_P1D, "rcc_90")
```

### Aquatics: water temperature

```{r}
leaderboard_plots(df_P1D, "temperature")
```

### Aquatics: dissolved oxygen

```{r}
leaderboard_plots(df_P1D, "oxygen")
```

### Aquatics: chrophyll-a

```{r}
leaderboard_plots(df_P1D, "chla")
```

### Beetle community richness

```{r}
leaderboard_plots(df_P1W, "richness")
```

### Beetle community abundance

```{r}
leaderboard_plots(df_P1W, "abundance")
```


### Ticks: Amblyomma americanum

```{r}
leaderboard_plots(df_P1W, "amblyomma_americanum")
```

:::

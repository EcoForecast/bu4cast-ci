{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "cb_prophet",
  "bbox": [
    [
      -156.6194,
      71.2824,
      -66.7987,
      71.2824
    ]
  ],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": [
      [37.1088, -119.7323],
      [37.0334, -119.2622],
      [31.9107, -110.8355],
      [29.676, -82.0084],
      [44.9501, -110.5871],
      [32.5415, -87.7982],
      [65.1532, -147.504],
      [46.2097, -89.4737],
      [31.1854, -84.4374],
      [45.9983, -89.7048],
      [47.1591, -99.1139],
      [29.6878, -82.0177],
      [31.8534, -88.1589],
      [18.0213, -67.0769],
      [31.8539, -88.1612],
      [37.3783, -80.5248],
      [38.2483, -109.3883],
      [40.0543, -105.5824],
      [46.7697, -100.9154],
      [35.4106, -99.0588],
      [40.1776, -112.4524],
      [35.9641, -84.2826],
      [29.6893, -81.9934],
      [19.5531, -155.3173],
      [40.2759, -105.546],
      [38.8929, -78.1395],
      [38.8901, -76.56],
      [45.5089, -89.5864],
      [40.4619, -103.0293],
      [32.9505, -87.3933],
      [37.0058, -119.006],
      [68.6611, -149.3705],
      [45.4937, -89.5857],
      [39.0404, -95.1921],
      [46.2339, -89.5373],
      [47.1282, -99.2413],
      [45.8205, -121.9519],
      [44.9535, -110.5391],
      [45.7624, -122.3303],
      [71.2824, -156.6194],
      [44.0639, -71.2874],
      [39.0337, -78.0418],
      [65.154, -147.5026],
      [33.4012, -97.57],
      [40.8155, -104.7456],
      [47.1617, -99.1066],
      [63.8811, -145.7514],
      [32.5417, -87.8039],
      [28.1251, -81.4362],
      [35.689, -83.5019],
      [17.9696, -66.8687],
      [42.5369, -72.1727],
      [63.8758, -149.2133],
      [31.1948, -84.4686],
      [32.5907, -106.8425],
      [39.1104, -96.6129],
      [39.1008, -96.5631],
      [47.1298, -99.2531],
      [68.6307, -149.6106],
      [39.7582, -102.4471],
      [40.035, -105.5442],
      [18.1135, -66.9868],
      [18.1741, -66.7987],
      [42.4719, -72.3295],
      [39.1051, -96.6038],
      [35.6904, -83.5038],
      [39.0956, -77.9832],
      [45.7908, -121.9338],
      [32.9604, -87.4077],
      [38.9459, -96.443],
      [44.2596, -122.1655],
      [68.6698, -149.143],
      [38.8943, -78.1473],
      [33.3785, -97.7823],
      [40.7839, -111.7979],
      [33.751, -111.5081],
      [36.9559, -119.0274],
      [35.9574, -84.2793],
      [39.8914, -105.9154],
      [37.0597, -119.2575],
      [34.4442, -96.6242]
    ]
  },
  "properties": {
    "description": [],
    "start_datetime": "2023-10-20",
    "end_datetime": "2023-12-10",
    "providers": [
      {
        "url": "pending",
        "name": "pending",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "https://www.ecoforecastprojectvt.org",
        "name": "Ecoforecast Challenge",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Forecasting",
      "neon4cast",
      "Daily Green chromatic coordinate",
      "Daily Dissolved oxygen",
      "Daily Red chromatic coordinate",
      "Daily latent heat flux",
      "Daily Net ecosystem exchange",
      "Daily Chlorophyll-a",
      "Daily Water temperature"
    ],
    "table:columns": [
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "parameter",
        "type": "string",
        "description": "ensemble member or distribution parameter"
      },
      {
        "name": "prediction",
        "type": "double",
        "description": "predicted value for variable"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      },
      {
        "name": "model_id",
        "type": "string",
        "description": "unique model identifier"
      },
      {
        "name": "reference_date",
        "type": "string",
        "description": "date that the forecast was initiated"
      }
    ]
  },
  "collection": "forecasts",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "cb_prophet"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "cb_prophet"
    },
    {
      "rel": "self",
      "href": "cb_prophet.json",
      "type": "application/json",
      "title": "Model Forecast"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/cb_prophet.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/cb_prophet.json\")\n\n"
    },
    "2": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Green chromatic coordinate",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=gcc_90/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=gcc_90/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org)\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "3": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Dissolved oxygen",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=oxygen/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=oxygen/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org)\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Red chromatic coordinate",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=rcc_90/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=rcc_90/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org)\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "5": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily latent heat flux",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=le/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=le/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org)\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "6": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Net ecosystem exchange",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=nee/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=nee/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org)\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "7": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Chlorophyll-a",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=chla/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=chla/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org)\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "8": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Water temperature",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=temperature/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(s3://anonymous@bio230014-bucket01/challenges/forecasts/parquet/duration=P1D/variable=temperature/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org)\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    }
  }
}

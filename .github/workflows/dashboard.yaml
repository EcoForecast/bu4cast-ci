on:
  #schedule:
  #  - cron: '0 8 * * *'
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

name: Update & Deploy dashboard
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install system deps
        run: |
          sudo apt-get update && sudo apt-get -y install libgdal-dev libgeos-dev libproj-dev libudunits2-dev

      - uses: r-lib/actions/setup-r@v2

      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV

      - name: Install and activate renv
        run: |
          install.packages("renv")
          renv::activate()
        shell: Rscript {0}
        working-directory: dashboard

      - name: Get R and OS version
        id: get-version
        run: |
          cat("os-version=", sessionInfo()$running, "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
          cat("r-version=", R.Version()$version.string, "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
        shell: Rscript {0}

      - name: Restore Renv package cache
        if: ${{ inputs.bypass-cache != 'true' }}
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - name: Install renv dependencies
        run: renv::restore(project )
        shell: Rscript {0}
        working-directory: dashboard

      - name: Don't use tar 1.30 from Rtools35 to store the cache
        shell: bash
        run: |
          if command -v /c/Rtools/bin/tar && /c/Rtools/bin/tar --version | grep -q 'tar (GNU tar) 1.30'
            then echo 'C:/Program Files/Git/usr/bin' >> $GITHUB_PATH
          fi
      
      - name: preload scores
        shell: Rscript {0}
        working-directory: dashboard
        run: |
          source("cache.R")
          

      - name: Cache scores
        id: cache-scores
        uses: actions/cache@v3
        with:
          path: cache
          key: ${{ runner.os }}-cache

      - name: Publish to GitHub Pages (and render)
        uses: quarto-dev/quarto-actions/publish@v2
        with:
           target: gh-pages
           path: dashboard
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # this secret is always available for github actions
